class Solution {
public:
    double gain(int pass, int total) {
        return ((double)(pass + 1) / (total + 1)) - ((double)pass / total);
    }
    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
        priority_queue<pair<double, pair<int, int>>> pq;
        for (auto& c : classes) {
            int pass = c[0], total = c[1];
            pq.push({gain(pass, total), {pass, total}});
        }
        while (extraStudents--) {
            auto [currGain, cls] = pq.top();
            pq.pop();
            int pass = cls.first + 1;
            int total = cls.second + 1;
            pq.push({gain(pass, total), {pass, total}});
        }
        double totalRatio = 0.0;
        while (!pq.empty()) {
            auto [_, cls] = pq.top();
            pq.pop();
            totalRatio += (double)cls.first / cls.second;
        }
        return totalRatio / classes.size();
    }
};
